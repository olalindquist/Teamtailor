{"ast":null,"code":"var _jsxFileName = \"/home/ola/ttailor/kodprov/src/components/MemoryHandler.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MemoryHandler(props) {\n  _s();\n\n  const [memoryPointer, setMemoryPointer] = useState(0);\n\n  function next() {\n    if (memoryPointer < props.list.length) setMemoryPointer(memoryPointer + 1);\n  }\n\n  function prev() {\n    if (memoryPointer < props.list.length) setMemoryPointer(memoryPointer + 1);\n  }\n\n  function show() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.list.map(job => JSON.stringify(job.id) + \" \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Memory\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.remember,\n      children: \"remeber current Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.clearMemory,\n      children: \"clear Memory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: next,\n      children: \"nextMem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: prev,\n      children: \"prevMem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.clearMemory,\n      children: \"gotoMem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), show()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MemoryHandler, \"RkqREJ3dve/yPEeLnxObV6rFV7k=\");\n\n_c = MemoryHandler;\nexport default MemoryHandler;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoryHandler\");","map":{"version":3,"names":["useState","MemoryHandler","props","memoryPointer","setMemoryPointer","next","list","length","prev","show","map","job","JSON","stringify","id","remember","clearMemory"],"sources":["/home/ola/ttailor/kodprov/src/components/MemoryHandler.tsx"],"sourcesContent":["import {useState} from 'react';\ninterface MemoryHandlerProps{\n    remember: ()=>void,\n    clearMemory: ()=>void,\n    list: any[],\n}\n\nfunction MemoryHandler(props:MemoryHandlerProps):JSX.Element {\n\n    const [memoryPointer, setMemoryPointer]=useState<number>(0);\n\n\n    function next() {\n        if(memoryPointer < props.list.length)\n        setMemoryPointer(memoryPointer+1)\n    }\n\n    function prev() {\n        if(memoryPointer < props.list.length)\n        setMemoryPointer(memoryPointer+1)\n    }\n\n    \n    function show():JSX.Element{\n        return (\n            <div >\n                {props.list.map( (job:any) => (\n                                        \n                   \n                        JSON.stringify(job.id)+\" \"\n                                       \n                )\n                               )}\n            </div>\n        )\n    }\n    return (\n        <div >\n            Memory\n            <button onClick={props.remember}>\n            remeber current Job\n        </button>\n            <button onClick={props.clearMemory}>\n            clear Memory\n        </button>\n            <button onClick={next}>\n            nextMem\n        </button>\n            <button onClick={prev}>\n            prevMem\n        </button>\n            <button onClick={props.clearMemory}>\n            gotoMem\n        </button>\n            {show()}\n        </div>\n            \n    );    \n}\n\nexport default MemoryHandler; \n"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;;AAOA,SAASC,aAAT,CAAuBC,KAAvB,EAA6D;EAAA;;EAEzD,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAkCJ,QAAQ,CAAS,CAAT,CAAhD;;EAGA,SAASK,IAAT,GAAgB;IACZ,IAAGF,aAAa,GAAGD,KAAK,CAACI,IAAN,CAAWC,MAA9B,EACAH,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;EACH;;EAED,SAASK,IAAT,GAAgB;IACZ,IAAGL,aAAa,GAAGD,KAAK,CAACI,IAAN,CAAWC,MAA9B,EACAH,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;EACH;;EAGD,SAASM,IAAT,GAA2B;IACvB,oBACI;MAAA,UACKP,KAAK,CAACI,IAAN,CAAWI,GAAX,CAAiBC,GAAD,IAGTC,IAAI,CAACC,SAAL,CAAeF,GAAG,CAACG,EAAnB,IAAuB,GAH9B;IADL;MAAA;MAAA;MAAA;IAAA,QADJ;EAWH;;EACD,oBACI;IAAA,kCAEI;MAAQ,OAAO,EAAEZ,KAAK,CAACa,QAAvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAKI;MAAQ,OAAO,EAAEb,KAAK,CAACc,WAAvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ,eAQI;MAAQ,OAAO,EAAEX,IAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ,eAWI;MAAQ,OAAO,EAAEG,IAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXJ,eAcI;MAAQ,OAAO,EAAEN,KAAK,CAACc,WAAvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdJ,EAiBKP,IAAI,EAjBT;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAsBH;;GAnDQR,a;;KAAAA,a;AAqDT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}