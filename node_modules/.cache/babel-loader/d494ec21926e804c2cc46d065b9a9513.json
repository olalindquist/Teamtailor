{"ast":null,"code":"export function getRoleFromLink(link, setRole) {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", \"Token token=a5o4wu2Ghgnehh_kX79193wPTv9bD4A72hY5mtzv\");\n  myHeaders.append(\"X-Api-Version\", \"20210218\");\n  var requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n  fetch(link, requestOptions).then(response => response.json()).then(result => {\n    setRole(result);\n  }).catch(error => console.log('error', error));\n}","map":{"version":3,"names":["getRoleFromLink","link","setRole","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","json","result","catch","error","console","log"],"sources":["/home/ola/ttailor/kodprov/src/components/search.ts"],"sourcesContent":["\nexport function getRoleFromLink(link:string, setRole:(arg:string)=>void):string{\n\n    var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", \"Token token=a5o4wu2Ghgnehh_kX79193wPTv9bD4A72hY5mtzv\");\n        myHeaders.append(\"X-Api-Version\", \"20210218\");\n        var requestOptions:any = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n        \n        fetch(link, requestOptions)\n            .then(response => response.json())\n            .then (result => {\n                setRole(result);\n\n            })\n            .catch(error => console.log('error', error))\n\n    \n}\n"],"mappings":"AACA,OAAO,SAASA,eAAT,CAAyBC,IAAzB,EAAsCC,OAAtC,EAAwE;EAE3E,IAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;EACID,SAAS,CAACE,MAAV,CAAiB,eAAjB,EAAkC,sDAAlC;EACAF,SAAS,CAACE,MAAV,CAAiB,eAAjB,EAAkC,UAAlC;EACA,IAAIC,cAAkB,GAAG;IACrBC,MAAM,EAAE,KADa;IAErBC,OAAO,EAAEL,SAFY;IAGrBM,QAAQ,EAAE;EAHW,CAAzB;EAMAC,KAAK,CAACT,IAAD,EAAOK,cAAP,CAAL,CACKK,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEWG,MAAM,IAAI;IACbZ,OAAO,CAACY,MAAD,CAAP;EAEH,CALL,EAMKC,KANL,CAMWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CANpB;AASP"},"metadata":{},"sourceType":"module"}