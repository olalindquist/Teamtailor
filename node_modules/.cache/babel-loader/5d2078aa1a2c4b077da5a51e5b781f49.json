{"ast":null,"code":"var _jsxFileName = \"/home/ola/ttailor/kodprov/src/components/JobViewer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport DisplayData from \"./DisplayData\";\nimport DisplayLinks from \"./DisplayLinks\";\nimport JobListHandler from \"./JobListHandler\";\nimport MemoryHandler from \"./MemoryHandler\"; //a5o4wu2Ghgnehh_kX79193wPTv9bD4A72hY5mtzv\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JobViewer() {\n  _s();\n\n  const [jobdata, setJobdata] = useState();\n  const [currentJob, setCurrentJob] = useState();\n  const [gotCurrentJob, setGotCurrentJob] = useState(false);\n  const [jobPointer, setJobPointer] = useState(0);\n  const [memory, setMemory] = useState([]);\n\n  function setCurrentJobTo(job) {\n    jobdata.data.forEach((j, i) => {\n      if (j.id === jobdata.data[jobpPointer]) {\n        setCurrentJob(jobdata.data[i]);\n      }\n    });\n    setCurrentJob(job);\n  }\n\n  function remember() {\n    let currentJobInMemory = false;\n    memory.forEach(job => JSON.stringify(job.id) === JSON.stringify(currentJob.id) ? currentJobInMemory = true : null);\n\n    if (!currentJobInMemory) {\n      setMemory(memory => [...memory, currentJob]);\n    }\n  }\n\n  function clearMemory() {\n    setMemory([]);\n  }\n\n  function nextJob() {\n    if (jobPointer < jobdata.data.length) {\n      setJobPointer(jobPointer + 1);\n      setCurrentJob(jobdata.data[jobPointer]);\n    }\n\n    console.log(\"JP \" + jobPointer + \" \" + jobdata.data.length);\n  }\n\n  function previousJob() {\n    if (jobPointer > 0) {\n      setJobPointer(jobPointer - 1);\n      setCurrentJob(jobdata.data[jobPointer]);\n    }\n\n    console.log(\"JP \" + jobPointer + \" \" + jobdata.data.length);\n  }\n\n  function getResult() {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", \"Token token=a5o4wu2Ghgnehh_kX79193wPTv9bD4A72hY5mtzv\");\n    myHeaders.append(\"X-Api-Version\", \"20210218\");\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    fetch(\"https://api.teamtailor.com/v1/jobs\", requestOptions).then(response => response.json()).then(result => {\n      setJobdata(result);\n      setCurrentJob(result.data[0]);\n      setGotCurrentJob(true);\n    }).catch(error => console.log('error', error));\n  } //*****************************************\n\n\n  function show() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"FROM JV  *****\", jobdata === null || jobdata === void 0 ? void 0 : jobdata.data.map(s => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DisplayData, {\n            jobdata: s.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DisplayLinks, {\n            jobLinks: s.links\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DisplayLinks, {\n            jobLinks: s.attributes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this);\n      }), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  } //***********************************************\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"JOBVIEWER\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MemoryHandler, {\n        remember: remember,\n        clearMemory: clearMemory,\n        list: memory,\n        setCurrent: setCurrentJobTo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), gotCurrentJob ? /*#__PURE__*/_jsxDEV(JobListHandler, {\n        currentJob: currentJob,\n        next: nextJob,\n        prev: previousJob\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"tjo \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }, this), \"********\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getResult,\n      children: \"Check for Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Memory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobViewer, \"DmMjQoLDuyJ5k0O+azsy/y6AI8Y=\");\n\n_c = JobViewer;\nexport default JobViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobViewer\");","map":{"version":3,"names":["React","useState","DisplayData","DisplayLinks","JobListHandler","MemoryHandler","JobViewer","jobdata","setJobdata","currentJob","setCurrentJob","gotCurrentJob","setGotCurrentJob","jobPointer","setJobPointer","memory","setMemory","setCurrentJobTo","job","data","forEach","j","i","id","jobpPointer","remember","currentJobInMemory","JSON","stringify","clearMemory","nextJob","length","console","log","previousJob","getResult","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","json","result","catch","error","show","map","s","links","attributes"],"sources":["/home/ola/ttailor/kodprov/src/components/JobViewer.tsx"],"sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport DisplayData from \"./DisplayData\";\nimport DisplayLinks from \"./DisplayLinks\";\nimport JobListHandler from \"./JobListHandler\"\nimport MemoryHandler from \"./MemoryHandler\"\n\n//a5o4wu2Ghgnehh_kX79193wPTv9bD4A72hY5mtzv\n\nfunction JobViewer():JSX.Element {\n    const [jobdata, setJobdata] =useState<any>();\n    const[currentJob, setCurrentJob]= useState<any>();\n    const [gotCurrentJob, setGotCurrentJob] =useState<boolean>(false) \n    const [jobPointer, setJobPointer] = useState<number>(0)\n    const [memory, setMemory]  = useState<any[]>([]); \n\n\n    function setCurrentJobTo(job:any) {\n        jobdata.data.forEach((j:any, i:number) =>{\n            if (j.id === jobdata.data[jobpPointer] ){\n            setCurrentJob(jobdata.data[i])\n            }\n\n                \n                \n        }\n                             \n            )\n            \n            \n        \n        setCurrentJob(job);\n        \n\n    }\n    \n\n    function remember() {\n        let currentJobInMemory:boolean =false\n\n        memory.forEach((job:any)=>\n            JSON.stringify(job.id) === JSON.stringify(currentJob.id) ? currentJobInMemory = true : null\n\n                      )\n        if(!currentJobInMemory){\n            \n            setMemory((memory) => [...memory, currentJob] )\n            \n        }\n    }\n    function clearMemory (){\n        setMemory([])\n       \n    }\n    function nextJob():void{\n        if (jobPointer < jobdata.data.length){\n            setJobPointer(jobPointer+1);\n            setCurrentJob(jobdata.data[jobPointer])\n        }\n\n        console.log(\"JP \"+ jobPointer +\" \" + jobdata.data.length);\n    }\n    \n    function previousJob():void{\n\n        if (jobPointer > 0){\n            setJobPointer (jobPointer-1);\n            setCurrentJob(jobdata.data[jobPointer])\n            \n        }\n        console.log(\"JP \"+ jobPointer +\" \" + jobdata.data.length);\n    }\n\n    \n    function getResult(): void\n    {\n        \n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", \"Token token=a5o4wu2Ghgnehh_kX79193wPTv9bD4A72hY5mtzv\");\n        myHeaders.append(\"X-Api-Version\", \"20210218\");\n        var requestOptions:any = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n        \n        fetch(\"https://api.teamtailor.com/v1/jobs\", requestOptions)\n            .then(response => response.json())\n            .then (result => {\n                setJobdata(result);\n                setCurrentJob(result.data[0])\n                setGotCurrentJob(true)\n            })\n            .catch(error => console.log('error', error))\n\n        \n    }\n\n    //*****************************************\n    function show():JSX.Element {\n\n        return (\n            <div >\n                FROM JV  *****\n                {jobdata?.data.map( (s:any)=>{\n                    return(\n                        <div >\n                            <DisplayData jobdata={s.id} />\n                            <DisplayLinks jobLinks={s.links} />\n                            <DisplayLinks jobLinks={s.attributes} /> \n                            </div>\n                    );\n                    \n                }\n                                  )}\n        )                \n        </div>\n    )\n    \n}   \n//***********************************************\n\nreturn (\n    <div >\n        JOBVIEWER\n        <div >\n        <MemoryHandler remember={remember} clearMemory = {clearMemory} list={memory} setCurrent={setCurrentJobTo} />\n        \n        \n        \n        {gotCurrentJob ?         \n            <JobListHandler currentJob={currentJob}  next={nextJob} prev={previousJob} />\n            : <div >tjo </div>\n            }\n    ********\n        \n        </div>\n        <button onClick={getResult}>\n        Check for Jobs\n    </button>\n\n        <h2>Memory</h2>\n        \n        \n        <div >\n        \n        </div>\n        \n        </div>\n);\n}\n\n\nexport default JobViewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}